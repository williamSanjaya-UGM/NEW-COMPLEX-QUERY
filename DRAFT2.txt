SELECT UNIQUE TBL.* FROM TESTING_TBL TBL;

SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL
GROUP BY NUMBER_1,NUMBER_2
ORDER BY NUMBER_1;

SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL
UNION
SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL;


SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL
UNION
SELECT NULL,NULL
FROM DUAL;

SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL
INTERSECT
SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL;

-- THESE BELOW WILL ALSO REMOVE THE NULL,NULL VALUE
SELECT NUMBER_1,NUMBER_2
FROM TESTING_TBL
MINUS
SELECT NULL,NULL
FROM DUAL;

SELECT NUMBER_1,NUMBER_2 FROM (
    SELECT NUMBER_1,NUMBER_2,
    ROW_NUMBER() OVER(PARTITION BY NUMBER_1,NUMBER_2
                        ORDER BY NUMBER_1,NUMBER_2) R
    FROM TESTING_TBL
)
WHERE R=1;

SELECT NUMBER_1,NUMBER_2 FROM(
    SELECT NUMBER_1,NUMBER_2,
        RANK() OVER(PARTITION BY NUMBER_1,NUMBER_2
                            ORDER BY ROWNUM) R
        FROM TESTING_TBL
    )
WHERE R=1;

SELECT * FROM TESTING_TBL
WHERE ROWID IN(
    SELECT MIN(ROWID)
    FROM TESTING_TBL
    GROUP BY NUMBER_1,NUMBER_2
)
ORDER BY NUMBER_1,NUMBER_2;

--THIS WILL DO DISTINCT AND ALSO REMOVE THE THE ROW WHICH COLUMN CONTAIN NULL VALUE
SELECT * FROM TESTING_TBL A
WHERE 1=(
    SELECT COUNT(1)
    FROM TESTING_TBL B
    WHERE
        A.NUMBER_1=B.NUMBER_1
        AND A.NUMBER_2=B.NUMBER_2
        AND A.ROWID>=B.ROWID
);

--DECODE WILL DO EQUALITY ASSOCIATION ONLY
--DECODE WILL ACCEPT THE VALUES EVEN THE DATATYPE IS DIFFERENT
--DECODE CAN ONLY BE USED AS PART OF THE SELECT STATEMENT
SELECT * FROM (
    SELECT
        NUMBER_1,
        NUMBER_2,
        DECODE(
            ABS(NUMBER_1/10),1,'BILANGAN 10',
            2,'BILANGAN 20',
            3,'BILANGAN 30','TIDAK JELAS') "HASIL"
    FROM TESTING_TBL
)
WHERE HASIL<>'TIDAK JELAS';

SELECT
    NUMBER_1,
    NUMBER_2,
    CASE 
        WHEN NUMBER_2<20 THEN 'BELOW 20'
        WHEN NUMBER_2>=20 THEN 'ABOVE 20'
        ELSE 'UNDETECT'
    END
FROM TESTING_TBL;

SELECT
    NUMBER_1,
    NUMBER_2,
    CASE ABS(NUMBER_1/10)
        WHEN 1 THEN 'BIL 10'
        WHEN 2 THEN 'BIL 20'
        WHEN 3 THEN 'BIL 30'
        ELSE 'UNDETECT'
    END
FROM TESTING_TBL 

--WILL CHANGE THE CHARACTER
SELECT REPLACE('WELCOME TO ORACLE CLASS','ORACLE',NULL)
FROM DUAL;

--WILL CHANGE THE WORD
SELECT TRANSLATE('WELCOME TO ORACLE CLASS','AIUEO','12345')
FROM DUAL

CREATE OR REPLACE PROCEDURE USP_MULTIPLE_INTO(
    P_NIK IN VARCHAR2
)AS
    V_NAME   VARCHAR2(100);
    V_NIK    VARCHAR2(20);
    V_POS_ID NUMERIC;
BEGIN
    SELECT 
        NAME,
        NIK,
        POS_ID 
        INTO V_NAME,V_NIK,V_POS_ID
    FROM EMP_HR HR
    JOIN CASHIER_POS_RECORD CPR
    ON HR.ID=CPR.CASHIER_ID
    WHERE HR.NIK=P_NIK
    FETCH FIRST 1 ROW ONLY;
END

DECLARE
    V1      NUMERIC:=10;
    V2      NUMERIC:=0;
    V_RES   NUMERIC;
BEGIN
    V_RES:=V1/V2;
--    EXCEPTION WHEN ZERO_DIVIDER THEN
    EXCEPTION WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('SQLERRM= '||SQLERRM);
        DBMS_OUTPUT.PUT_LINE('SQLCODE= '||SQLCODE);
END;

INSERT INTO TESTING_TBL(NUMBER_1,NUMBER_2)
    SELECT LEVEL,LEVEL-1 "PATHLEN"
    FROM DUAL
    CONNECT BY LEVEL<=30;